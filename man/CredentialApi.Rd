% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/credential_api.R
\docType{class}
\name{CredentialApi}
\alias{CredentialApi}
\title{Credential operations}
\format{
An \code{R6Class} generator object
}
\description{
LAMP.Credential
}
\section{Methods}{

\describe{
\strong{ create } \emph{  }


\itemize{
\item \emph{ @param } type.id character
\item \emph{ @param } body object


\item status code : 200 | 200 Success

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ delete } \emph{  }


\itemize{
\item \emph{ @param } type.id character
\item \emph{ @param } access.key character


\item status code : 200 | 200 Success

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ list } \emph{  }


\itemize{
\item \emph{ @param } type.id character
\item \emph{ @param } transform character


\item status code : 200 | 200 Success

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ update } \emph{  }


\itemize{
\item \emph{ @param } type.id character
\item \emph{ @param } access.key character
\item \emph{ @param } body object


\item status code : 200 | 200 Success

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  create  ####################

library(LAMP)
var.type.id <- 'type.id_example' # character | 
var.body <- NULL # object | 

result <- LAMP.Credential$create(var.type.id, var.body)


####################  delete  ####################

library(LAMP)
var.type.id <- 'type.id_example' # character | 
var.access.key <- 'access.key_example' # character | 

result <- LAMP.Credential$delete(var.type.id, var.access.key)


####################  list  ####################

library(LAMP)
var.type.id <- 'type.id_example' # character | 

result <- LAMP.Credential$list(var.type.id)


####################  update  ####################

library(LAMP)
var.type.id <- 'type.id_example' # character | 
var.access.key <- 'access.key_example' # character | 
var.body <- NULL # object | 

result <- LAMP.Credential$update(var.type.id, var.access.key, var.body)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CredentialApi$new()}}
\item \href{#method-create}{\code{CredentialApi$create()}}
\item \href{#method-createWithHttpInfo}{\code{CredentialApi$createWithHttpInfo()}}
\item \href{#method-delete}{\code{CredentialApi$delete()}}
\item \href{#method-deleteWithHttpInfo}{\code{CredentialApi$deleteWithHttpInfo()}}
\item \href{#method-list}{\code{CredentialApi$list()}}
\item \href{#method-listWithHttpInfo}{\code{CredentialApi$listWithHttpInfo()}}
\item \href{#method-update}{\code{CredentialApi$update()}}
\item \href{#method-updateWithHttpInfo}{\code{CredentialApi$updateWithHttpInfo()}}
\item \href{#method-clone}{\code{CredentialApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\if{latex}{\out{\hypertarget{method-create}{}}}
\subsection{Method \code{create()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$create(type.id, body, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-createWithHttpInfo}{}}}
\subsection{Method \code{createWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$createWithHttpInfo(type.id, body, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$delete(type.id, access.key, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-deleteWithHttpInfo}{}}}
\subsection{Method \code{deleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$deleteWithHttpInfo(type.id, access.key, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list"></a>}}
\if{latex}{\out{\hypertarget{method-list}{}}}
\subsection{Method \code{list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$list(type.id, transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-listWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-listWithHttpInfo}{}}}
\subsection{Method \code{listWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$listWithHttpInfo(type.id, transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update"></a>}}
\if{latex}{\out{\hypertarget{method-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$update(type.id, access.key, body, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-updateWithHttpInfo}{}}}
\subsection{Method \code{updateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$updateWithHttpInfo(type.id, access.key, body, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
