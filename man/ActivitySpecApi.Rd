% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/activity_spec_api.R
\docType{class}
\name{ActivitySpecApi}
\alias{ActivitySpecApi}
\title{ActivitySpec operations}
\format{
An \code{R6Class} generator object
}
\description{
LAMP.ActivitySpec
}
\section{Methods}{

\describe{
\strong{ all } \emph{ Get all ActivitySpecs registered. }
Get all ActivitySpecs registered.

\itemize{
\item \emph{ @param } transform character


\item status code : 200 | 200 Success

\item return type : array[object] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ create } \emph{ Create a new ActivitySpec. }
Create a new ActivitySpec.

\itemize{
\item \emph{ @param } activity.spec \link{ActivitySpec}


\item status code : 200 | 200 Success

\item return type : character 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ delete } \emph{ Delete an ActivitySpec. }
Delete an ActivitySpec.

\itemize{
\item \emph{ @param } activity.spec.name character


\item status code : 200 | 200 Success

\item return type : character 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ update } \emph{ Update an ActivitySpec. }
Update an ActivitySpec.

\itemize{
\item \emph{ @param } activity.spec.name character
\item \emph{ @param } activity.spec \link{ActivitySpec}


\item status code : 200 | 200 Success

\item return type : character 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ view } \emph{ View an ActivitySpec. }
View an ActivitySpec.

\itemize{
\item \emph{ @param } activity.spec.name character
\item \emph{ @param } transform character


\item status code : 200 | 200 Success

\item return type : character 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | 400 Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 403 | 403 Authorization Failed

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | 404 Not Found

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 0 | 500 Internal Error

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  all  ####################

library(LAMP)

#Get all ActivitySpecs registered.
result <- LAMP.ActivitySpec$all()


####################  create  ####################

library(LAMP)
var.activity.spec <- ActivitySpec$new() # ActivitySpec | 

#Create a new ActivitySpec.
result <- LAMP.ActivitySpec$create(var.activity.spec)


####################  delete  ####################

library(LAMP)
var.activity.spec.name <- 'activity.spec.name_example' # character | 

#Delete an ActivitySpec.
result <- LAMP.ActivitySpec$delete(var.activity.spec.name)


####################  update  ####################

library(LAMP)
var.activity.spec.name <- 'activity.spec.name_example' # character | 
var.activity.spec <- ActivitySpec$new() # ActivitySpec | 

#Update an ActivitySpec.
result <- LAMP.ActivitySpec$update(var.activity.spec.name, var.activity.spec)


####################  view  ####################

library(LAMP)
var.activity.spec.name <- 'activity.spec.name_example' # character | 

#View an ActivitySpec.
result <- LAMP.ActivitySpec$view(var.activity.spec.name)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ActivitySpecApi$new()}}
\item \href{#method-all}{\code{ActivitySpecApi$all()}}
\item \href{#method-allWithHttpInfo}{\code{ActivitySpecApi$allWithHttpInfo()}}
\item \href{#method-create}{\code{ActivitySpecApi$create()}}
\item \href{#method-createWithHttpInfo}{\code{ActivitySpecApi$createWithHttpInfo()}}
\item \href{#method-delete}{\code{ActivitySpecApi$delete()}}
\item \href{#method-deleteWithHttpInfo}{\code{ActivitySpecApi$deleteWithHttpInfo()}}
\item \href{#method-update}{\code{ActivitySpecApi$update()}}
\item \href{#method-updateWithHttpInfo}{\code{ActivitySpecApi$updateWithHttpInfo()}}
\item \href{#method-view}{\code{ActivitySpecApi$view()}}
\item \href{#method-viewWithHttpInfo}{\code{ActivitySpecApi$viewWithHttpInfo()}}
\item \href{#method-clone}{\code{ActivitySpecApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-all"></a>}}
\if{latex}{\out{\hypertarget{method-all}{}}}
\subsection{Method \code{all()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$all(transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-allWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-allWithHttpInfo}{}}}
\subsection{Method \code{allWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$allWithHttpInfo(transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create"></a>}}
\if{latex}{\out{\hypertarget{method-create}{}}}
\subsection{Method \code{create()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$create(activity.spec, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-createWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-createWithHttpInfo}{}}}
\subsection{Method \code{createWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$createWithHttpInfo(activity.spec, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$delete(activity.spec.name, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-deleteWithHttpInfo}{}}}
\subsection{Method \code{deleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$deleteWithHttpInfo(activity.spec.name, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update"></a>}}
\if{latex}{\out{\hypertarget{method-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$update(activity.spec.name, activity.spec, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-updateWithHttpInfo}{}}}
\subsection{Method \code{updateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$updateWithHttpInfo(activity.spec.name, activity.spec, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-view"></a>}}
\if{latex}{\out{\hypertarget{method-view}{}}}
\subsection{Method \code{view()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$view(activity.spec.name, transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-viewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-viewWithHttpInfo}{}}}
\subsection{Method \code{viewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$viewWithHttpInfo(activity.spec.name, transform = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ActivitySpecApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
